/*
 * Copyright 2015 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

ext {
    versions = [:]
    libraries = [:]
}

versions.es = '1.7.2'
versions.guava = '18.0'
versions.jackson = '2.6.1'
versions.slf4j = '1.7.12'
versions.httpcomponents = '4.4.1'

libraries.guava = "com.google.guava:guava:$versions.guava"
libraries.hamcrest = "org.hamcrest:hamcrest-all:1.3"

configurations {
    plugin.description = 'The compile dependencies for the plugin, excluding the local dependencies to avoid problems with Shadow'
    compile.extendsFrom plugin
}

dependencies {
    plugin libraries.guava
    plugin 'joda-time:joda-time:2.8.2'

    plugin "com.fasterxml.jackson.core:jackson-core:$versions.jackson"
    plugin "com.fasterxml.jackson.core:jackson-databind:$versions.jackson"
    plugin "com.fasterxml.jackson.core:jackson-annotations:$versions.jackson"
    plugin "com.fasterxml.jackson.datatype:jackson-datatype-joda:$versions.jackson"

    plugin 'net.logstash.logback:logstash-logback-encoder:4.5.1'
    // The logback encoder requires logback-classic, but we don't want it to bind and conflict with Gradle's SLF4J implementation
    // So this version removes the static binding classes
    plugin files('lib/logback-classic-nobinding-1.1.3.jar')

    plugin ("io.searchbox:jest:0.1.7") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    plugin "org.elasticsearch:elasticsearch:$versions.es", optional

    plugin 'org.apache.httpcomponents:fluent-hc:4.5.1'
    plugin 'org.apache.commons:commons-lang3:3.4' // also transitive of Jest
    plugin 'commons-io:commons-io:2.5'

    plugin 'com.netflix.nebula:gradle-info-plugin:4.+', optional

    compileOnly 'com.google.code.findbugs:jsr305:3.0.0'

    testCompile 'com.netflix.nebula:nebula-test:7.+'
    testCompile "com.google.guava:guava-testlib:$versions.guava"
    integTestCompile 'com.github.tlrx:elasticsearch-test:1.2.1'
    integTestCompile 'com.github.tomakehurst:wiremock-standalone:2.20.0'
}

configurations.all ({
    resolutionStrategy {
        eachDependency { details ->
            switch (details.requested.name) {
                case 'guava':
                    details.useTarget libraries.guava
                    break
                case 'junit':
                case 'junit-dep':
                    details.useTarget 'junit:junit:4.11'
                    break
                case 'hamcrest-core':
                    // ElasticSearchIntegrationTest requires hamcrest-all, but it doesn't come in transitively
                    details.useTarget libraries.hamcrest
                    break
            }
        }
    }
})

// Drop the classifier and delete jar task actions to replace the regular jar artifact with the shadow artifact
shadowJar {
    configurations = [project.configurations.plugin]
    classifier = null
    dependencies {
        // Relocate Guava and HTTP components because it's a real bear if we get downgraded or upgraded downstream, and dependency-lock unfortunately applies to every config
        include(dependency(libraries.guava))
        include(dependency('org.apache.httpcomponents:.*'))
        include(dependency('io.searchbox:.*'))
    }
    relocate 'com.google.common', 'nebula.plugin.metrics.com.google.common'
    relocate 'com.google.thirdparty', 'nebula.plugin.metrics.com.google.thirdparty'
    relocate 'io.searchbox', 'nebula.plugin.metrics.io.searchbox'
    relocate 'org.apache.http', 'nebula.plugin.metrics.org.apache.http'
}

jar.enabled = false
jar.dependsOn shadowJar
